'''
ДП.2. Рецидивист

Ограничение времени: 5 секунд
Ограничение памяти: 64.0 Мб
Ввод стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt

Помните нашего вора в кондитерской лавке? Его приговорили к лишению свободы на t лет. Он отсидел и вышел. Но вот незадача! Вместо того, чтобы встать на путь праведный, он решил и дальше совершать преступления против бедных кондитеров и их бедных кондитерских лавок! 
И вот, черной-черной ночью, вооружившись черным-черным пакетом, наш преступник выдвинулся совершать свои злодеяния. Но то, что наш преступник вновь пошел по кондитерским лавкам, ещё не говорит о том, что воришка не изменился. Это не так. Он стал хитрее. 
Проведя какое-то время за клеткой, он осознал, что некоторые торты можно продать только целиком, а некоторые торты можно продавать и по кусочкам (не спрашивайте, как он пришёл к такому выводу). И вот он вновь обратился к вам за помощью. 
Помогите преступнику выбрать торты так, чтобы они уместились в пакет и в сумме стоили бы максимально возможное число денежных единиц. Некоторые торты можно резать. А некоторые торты нельзя резать. Удачи!

Описание входных данных
В первой строке входных данных содержатся натуральные числа n (количество тортов) (1 <= n <= 500) и W (вместимость пакета) (1 <= W <= 10 ** 4). 
Следующие n строк содержат информацию о тортах: цену p_i (0 <= p_i <= 10 ** 4), объем s_i(1 <= s_i <= 10 ** 4) и q_i - информацию о том, можно ли резать торт (Д - можно, Н - нельзя).

Описание выходных данных
В единственной строке выходных данных выведите общую стоимость тортов, которые удалось засунуть в пакет. С точностью до двух знаков после запятой.

Формат ввода
5 1000
125 400 Д
500 1500 Н
25 100 Д
400 1300 Д
250 700 Н

Формат вывода
343.75
'''

amount, bag = map(int, input().split())
cakes = []
temp_bag = bag
for _ in range(amount):
    price, weight, can_be_cut = input().split()
    price, weight = int(price), int(weight)
    cakes.append([price, weight, can_be_cut])

sorted_cakes = sorted(cakes, key=lambda x: x[0] / x[1], reverse=True)

final_price = 0
for price, weight, can_be_cut in sorted_cakes:
    if bag == 0:
        break
    elif bag - weight >= 0:
        bag -= weight
        final_price += price
    elif can_be_cut == 'Д':
        final_price += price * bag / weight
        bag = 0

print('%.2f' % final_price)
