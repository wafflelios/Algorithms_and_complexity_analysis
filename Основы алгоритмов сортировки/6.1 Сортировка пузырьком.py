'''
6.1. Сортировка пузырьком

Ограничение времени: 4 секунды
Ограничение памяти: 64.0 Мб
Ввод стандартный ввод или input.txt
Вывод стандартный вывод или output.txt

У маленького Миши дома очень много бусинок разного размера. Однажды Миша решил сделать своей маме подарок - бусы из всех своих бусинок. 
Миша отыскал в доме леску и связал все свои бусинки, но вот загвоздка: Мише не понравился внешний вид бус из-за того, что бусинки разных размеров. 
В итоге Миша решил отсортировать бусинки по размеру, он вытащил леску из бус и шарики выстроились на полу в ровную линию. 
Помогите маленькому Мише отсортировать бусинки по возрастанию! Но чтобы не перегрузить мозг Миши сложными алгоритмами, используйте сортировку пузырьком. 
В 12 часов Миша планирует прерваться на обед, поэтому необходимо еще вывести промежуточное состояние, чтобы проверить, что во время обеда бусинки никуда не укатились.
Вам дан массив размеров бусинок. Отсортируйте его пузырьковой сортировкой. Сначала выведите промежуточный результат, полученный после определенного количества итераций,
а после окончательный результат. В результате у вас должен получиться искомый массив, отсортированный по возрастанию.

Описание входных данных:
В первой строке входных данных дан исходный массив. Кол-во элементов в нем больше 1 и не превосходит 10 ** 4.
Во второй строке дано число k, через сколько прохождений массива необходимо вывести промежуточный результат сортировки.

Описание выходных данных:
В первой строке выходных данных выведите состояние массива после k прохождений.
Во второй строке выведите отсортированный массив.

Формат ввода
6 4 3 5 1 3
3

Формат вывода
3 1 3 4 5 6
1 3 3 4 5 6

Примечания
При данной сортировке предполагается, что после каждого прохода массива, наибольший элемент из оставшихся встаёт на своё место справа, 
то есть рядом с предыдущим "наибольшим" элементом.
'''

def bubble_sort():
    beads = list(map(int, input().split()))
    number = int(input())
    length = len(beads)
    for index in range(length - 1):
        if index == number:
            print(*beads)
        for sub_index in range(length - index - 1):
            if beads[sub_index] > beads[sub_index + 1]:
                beads[sub_index], beads[sub_index + 1] = beads[sub_index + 1], beads[sub_index]
    print(*beads)


bubble_sort()
