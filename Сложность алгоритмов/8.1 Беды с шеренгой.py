'''
8.1. Беды с шеренгой

Ограничение времени: 1 секунда
Ограничение памяти: 64.0 Мб
Ввод стандартный ввод или input.txt
Вывод стандартный вывод или output.txt
Зинаида Петровна, учительница физкультуры, очень умная и строгая женщина. А её ученики, к сожалению, не такие же умные, как Зинаида Петровна. 
И всякий раз, когда Зинаида Петровна даёт команду построиться в шеренгу по росту, в классе начинается сущий кошмар и неразбериха. 
Поэтому учительница придумала гениальный план. Надёжный, как швейцарские часы! Зинаида Петровна решила воспользоваться быстрой сортировкой, 
которую она проходила когда-то давно в университете. За разделяющий элемент Зинаида Петровна решила взять последнего ученика. 
Помогите Зинаиде Петровне написать программу, которая воплотит её гениальный замысел в жизнь. Помимо отсортированной шеренги, 
Зинаида Петровна хочет увидеть последнего ученика из каждой группы, получившейся в процессе сортировки.

Описание входных данных
В единственной строке входных данных дан непустой исходный массив, количество элементов которого не превосходит 10 ** 5. 
Все элементы массива неотрицательны и не превосходят 10 ** 9.

Описание выходных данных
На каждой новой строке выходных данных выведите последний элемент каждой группы, получившейся в процессе сортировки. 
Последней строкой выведите отсортированный массив.

Формат ввода
179 181 165 184 190 152 167

Формат вывода
167
165
181
190
152 165 167 179 181 184 190
'''

def sort_heights(arr, start, end):
    l_point, r_point, pivot = start, end - 1, end
    if len(arr) != 1:
        print(arr[pivot])
    while l_point <= r_point:
        while arr[l_point] < arr[pivot]:
            l_point += 1
        while r_point >= start and arr[r_point] >= arr[pivot]:
            r_point -= 1
        if l_point <= r_point:
            arr[l_point], arr[r_point] = arr[r_point], arr[l_point]
    arr[l_point], arr[pivot] = arr[pivot], arr[l_point]
    if start < l_point - 1:
        sort_heights(arr, start, l_point - 1)
    if l_point + 1 < end:
        sort_heights(arr, l_point + 1, end)


heights = list(map(int, input().split()))
sort_heights(heights, 0, len(heights) - 1)
print(*heights)
