'''
9.1. Вор в кондитерской лавке

Ограничение времени: 1 секунда
Ограничение памяти: 64.0 Мб
Ввод стандартный ввод или input.txt
Вывод стандартный вывод или output.txt

В черную-черную ночь, в черном-черном городе, на черной-черной улице, вор в черной-черной балаклаве ворвался в кондитерский магазин. 
С черным-черным пакетом вместимостью W и ножом. На полках в кондитерской лежат n тортов. У каждого торта на ценнике указан объём s и цена p.
Станьте соучастником преступления и помогите преступнику выбрать торты так, 
чтобы они уместились в пакет и в сумме стоили бы максимально возможное число денежных единиц. Торты можно резать.

Описание входных данных
В первой строке входных данных содержатся натуральные числа n(кол-во тортов)(1 <= n <= 10 ** 5) и W(вместимость пакета)(1 <= W <= 10 ** 9). 
Следующие n строк содержат информацию о тортах: цену p_i(0 <= p_i <= 10 ** 9) и объем s_i(1 <= s_i <= 10 ** 9)

Описание выходных данных
В единственной строке выходных данных выведите общую стоимость тортов, которые удалось засунуть в пакет. С точностью до двух знаков после запятой.

Формат ввода
5 1000
125 400
500 1500
25 100
400 1300
250 700

Формат вывода
350.00
'''

amount, bag = map(int, input().split())
cakes = []
temp_bag = bag
for _ in range(amount):
    price, weight = map(int, input().split())
    cakes.append([price, weight])

sorted_cakes = sorted(cakes, key=lambda x: x[0] / x[1], reverse=True)

final_price = 0
for price, weight in sorted_cakes:
    if bag == 0:
        break
    elif bag - weight >= 0:
        bag -= weight
        final_price += price
    else:
        final_price += price * bag / weight
        bag = 0

print('%.2f' % final_price)
